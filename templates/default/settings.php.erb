<?php
function globals_import() {
  $dirs = new RecursiveDirectoryIterator(__DIR__ . '/globals.conf.d');
  $it = new RecursiveIteratorIterator($dirs);

  $depth_matrix = array();

  while ($it->valid()) {
    if (!$it->isDot()) {
      $path = $it->getSubPathName();
      $depth = count(explode('/', $path));
      $info = load_file_by_type(__DIR__ . '/' . 'globals.conf.d' . '/' . $path);
      $depth_matrix[$depth][] = _array_path_depth_set($path, $info);
    }
    $it->next();
  }

  foreach ($depth_matrix as $depth => $configs) {
    $depth_matrix[$depth] = call_user_func_array('array_merge_recursive', $configs);
  }

  // Ensure that the deepest configs override others.
  krsort($depth_matrix);
  $config = call_user_func_array('array_merge_recursive', $depth_matrix);
  $stupid_globals = $config['globals'];
  unset($config['globals']);

  global $databases, $cookie_domain, $conf, $installed_profile, $update_free_access, $db_url, $db_prefix, $drupal_hash_salt, $is_https, $base_secure_url, $base_insecure_url;
  extract($config);
  extract($stupid_globals);
  /* echo '<pre>'; */
  /* var_export($config); */
  /* var_export($stupid_globals); */
  /* die(); */
  /* $databases = $config['databases']; */
  /* return $databases; */
}

function ini_import() {
  $files = glob(__DIR__ . '/ini.conf.d/*.ini');
  $inis = array();
  foreach ($files as $file) {
    $inis += parse_ini_file($file);
  }
  foreach ($inis as $directive => $value) {
    ini_set($directive, $value);
  }
}

function _array_path_depth_set($path, $info) {
  $path_parts = explode('/', $path);
  $filename = array_pop($path_parts);
  $base = current(explode('.', $filename, -1));
  $info = array($base => $info);
  while($key = array_pop($path_parts)) {
    $info = array($key => $info);
  }
  return $info;
}

function load_file_by_type($file) {
  // Forgive me for what I am about to do.
  $extension = end(explode('.', $file));
  switch($extension) {
  case 'yml':
  case 'yaml':
    //TODO: add something here.
  case 'json':
    $info = json_decode(file_get_contents($file), TRUE);
    break;
  case 'ini':
    $info = parse_ini_file($file);
  }
  return $info;
}

globals_import();
ini_import();
